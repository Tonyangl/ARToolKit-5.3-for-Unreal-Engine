// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/ARPrivatePCH.h"
#include "AR.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1AR() {}
FName AR_OnTargetFound = FName(TEXT("OnTargetFound"));
FName AR_OnTargetLost = FName(TEXT("OnTargetLost"));
	void UARBPLibrary::StaticRegisterNativesUARBPLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UARBPLibrary::StaticClass(), "getCameraTexture",(Native)&UARBPLibrary::execgetCameraTexture);
	}
	IMPLEMENT_CLASS(UARBPLibrary, 3556353504);
	void AARTarget::OnTargetFound()
	{
		ProcessEvent(FindFunctionChecked(AR_OnTargetFound),NULL);
	}
	void AARTarget::OnTargetLost()
	{
		ProcessEvent(FindFunctionChecked(AR_OnTargetLost),NULL);
	}
	void AARTarget::StaticRegisterNativesAARTarget()
	{
	}
	IMPLEMENT_CLASS(AARTarget, 741997666);
static class UEnum* ECameraSelection_StaticEnum()
{
	extern AR_API class UPackage* Z_Construct_UPackage__Script_AR();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AR_API class UEnum* Z_Construct_UEnum_AR_ECameraSelection();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AR_ECameraSelection, Z_Construct_UPackage__Script_AR(), TEXT("ECameraSelection"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECameraSelection(ECameraSelection_StaticEnum, TEXT("/Script/AR"), TEXT("ECameraSelection"), false, nullptr, nullptr);
	void AARPawn::OnTargetFound(int32 targetID, FName const& targetName)
	{
		ARPawn_eventOnTargetFound_Parms Parms;
		Parms.targetID=targetID;
		Parms.targetName=targetName;
		ProcessEvent(FindFunctionChecked(AR_OnTargetFound),&Parms);
	}
	void AARPawn::OnTargetLost(int32 targetID, FName const& targetName)
	{
		ARPawn_eventOnTargetLost_Parms Parms;
		Parms.targetID=targetID;
		Parms.targetName=targetName;
		ProcessEvent(FindFunctionChecked(AR_OnTargetLost),&Parms);
	}
	void AARPawn::StaticRegisterNativesAARPawn()
	{
		FNativeFunctionRegistrar::RegisterFunction(AARPawn::StaticClass(), "getCameraTexture",(Native)&AARPawn::execgetCameraTexture);
		FNativeFunctionRegistrar::RegisterFunction(AARPawn::StaticClass(), "SetTracking",(Native)&AARPawn::execSetTracking);
	}
	IMPLEMENT_CLASS(AARPawn, 3960622629);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();

	AR_API class UFunction* Z_Construct_UFunction_UARBPLibrary_getCameraTexture();
	AR_API class UClass* Z_Construct_UClass_UARBPLibrary_NoRegister();
	AR_API class UClass* Z_Construct_UClass_UARBPLibrary();
	AR_API class UFunction* Z_Construct_UFunction_AARTarget_OnTargetFound();
	AR_API class UFunction* Z_Construct_UFunction_AARTarget_OnTargetLost();
	AR_API class UClass* Z_Construct_UClass_AARTarget_NoRegister();
	AR_API class UClass* Z_Construct_UClass_AARTarget();
	AR_API class UEnum* Z_Construct_UEnum_AR_ECameraSelection();
	AR_API class UFunction* Z_Construct_UFunction_AARPawn_getCameraTexture();
	AR_API class UFunction* Z_Construct_UFunction_AARPawn_OnTargetFound();
	AR_API class UFunction* Z_Construct_UFunction_AARPawn_OnTargetLost();
	AR_API class UFunction* Z_Construct_UFunction_AARPawn_SetTracking();
	AR_API class UClass* Z_Construct_UClass_AARPawn_NoRegister();
	AR_API class UClass* Z_Construct_UClass_AARPawn();
	AR_API class UPackage* Z_Construct_UPackage__Script_AR();
	UFunction* Z_Construct_UFunction_UARBPLibrary_getCameraTexture()
	{
		struct ARBPLibrary_eventgetCameraTexture_Parms
		{
			UTexture2D* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UARBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("getCameraTexture"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(ARBPLibrary_eventgetCameraTexture_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, ARBPLibrary_eventgetCameraTexture_Parms), 0x0010000000000580, Z_Construct_UClass_UTexture2D_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ARToolKit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/ARBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UARBPLibrary_NoRegister()
	{
		return UARBPLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UARBPLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_AR();
			OuterClass = UARBPLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UARBPLibrary_getCameraTexture());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UARBPLibrary_getCameraTexture(), "getCameraTexture"); // 3645340612
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ARBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/ARBPLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UARBPLibrary(Z_Construct_UClass_UARBPLibrary, &UARBPLibrary::StaticClass, TEXT("UARBPLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UARBPLibrary);
	UFunction* Z_Construct_UFunction_AARTarget_OnTargetFound()
	{
		UObject* Outer=Z_Construct_UClass_AARTarget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTargetFound"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ARToolKit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AARTarget_OnTargetLost()
	{
		UObject* Outer=Z_Construct_UClass_AARTarget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTargetLost"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ARToolKit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AARTarget_NoRegister()
	{
		return AARTarget::StaticClass();
	}
	UClass* Z_Construct_UClass_AARTarget()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_AR();
			OuterClass = AARTarget::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AARTarget_OnTargetFound());
				OuterClass->LinkChild(Z_Construct_UFunction_AARTarget_OnTargetLost());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_shadowPlaneScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("shadowPlaneScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(shadowPlaneScale, AARTarget), 0x0010000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AllowShadowPlane, AARTarget, bool);
				UProperty* NewProp_AllowShadowPlane = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AllowShadowPlane"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AllowShadowPlane, AARTarget), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(AllowShadowPlane, AARTarget), sizeof(bool), true);
				UProperty* NewProp_movableObjectList = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("movableObjectList"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(movableObjectList, AARTarget), 0x0010000000000001);
				UProperty* NewProp_movableObjectList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_movableObjectList, TEXT("movableObjectList"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(targetName, AARTarget), 0x0010000000000001);
				UProperty* NewProp_scale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(scale, AARTarget), 0x0010000000000001);
				UProperty* NewProp_shadowPlane = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("shadowPlane"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(shadowPlane, AARTarget), 0x00100000000b0009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_plane = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("plane"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(plane, AARTarget), 0x00100000000b0009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_targetPivot = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("targetPivot"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(targetPivot, AARTarget), 0x00100000000b0009, Z_Construct_UClass_USceneComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AARTarget_OnTargetFound(), "OnTargetFound"); // 925815023
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AARTarget_OnTargetLost(), "OnTargetLost"); // 2106533442
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ARTarget.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_shadowPlaneScale, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_shadowPlaneScale, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_shadowPlaneScale, TEXT("ToolTip"), TEXT("set new scale for the shadow, try to covert all the space for your meshes"));
				MetaData->SetValue(NewProp_AllowShadowPlane, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_AllowShadowPlane, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_AllowShadowPlane, TEXT("ToolTip"), TEXT("if you want see shadows interacting with the camera the active this, take care with performance"));
				MetaData->SetValue(NewProp_movableObjectList, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_movableObjectList, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_movableObjectList, TEXT("ToolTip"), TEXT("include actor here if you need track some movable, for example a skeletal mesh"));
				MetaData->SetValue(NewProp_targetName, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_targetName, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_targetName, TEXT("ToolTip"), TEXT("Type new target name, must be inside AR folder in the content"));
				MetaData->SetValue(NewProp_scale, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_scale, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_scale, TEXT("ToolTip"), TEXT("set scale if your meshes are bigger or smaller"));
				MetaData->SetValue(NewProp_shadowPlane, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_shadowPlane, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_shadowPlane, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_plane, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_plane, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_plane, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_targetPivot, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_targetPivot, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_targetPivot, TEXT("ModuleRelativePath"), TEXT("Public/ARTarget.h"));
				MetaData->SetValue(NewProp_targetPivot, TEXT("ToolTip"), TEXT("vars"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AARTarget(Z_Construct_UClass_AARTarget, &AARTarget::StaticClass, TEXT("AARTarget"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AARTarget);
	UEnum* Z_Construct_UEnum_AR_ECameraSelection()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_AR();
		extern uint32 Get_Z_Construct_UEnum_AR_ECameraSelection_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECameraSelection"), 0, Get_Z_Construct_UEnum_AR_ECameraSelection_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECameraSelection"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECameraSelection::DEFAULT")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECameraSelection::FRONTAL_CAMERA")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECameraSelection::BACK_CAMERA")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECameraSelection::ECameraSelection_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ECameraSelection");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/Utils.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AR_ECameraSelection_CRC() { return 374871948U; }
	UFunction* Z_Construct_UFunction_AARPawn_getCameraTexture()
	{
		struct ARPawn_eventgetCameraTexture_Parms
		{
			UTexture2D* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AARPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("getCameraTexture"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(ARPawn_eventgetCameraTexture_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, ARPawn_eventgetCameraTexture_Parms), 0x0010000000000580, Z_Construct_UClass_UTexture2D_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ARToolKit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AARPawn_OnTargetFound()
	{
		UObject* Outer=Z_Construct_UClass_AARPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTargetFound"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(ARPawn_eventOnTargetFound_Parms));
			UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, ARPawn_eventOnTargetFound_Parms), 0x0010000008000182);
			UProperty* NewProp_targetID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetID"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(targetID, ARPawn_eventOnTargetFound_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ARToolKit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
			MetaData->SetValue(NewProp_targetName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AARPawn_OnTargetLost()
	{
		UObject* Outer=Z_Construct_UClass_AARPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTargetLost"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(ARPawn_eventOnTargetLost_Parms));
			UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, ARPawn_eventOnTargetLost_Parms), 0x0010000008000182);
			UProperty* NewProp_targetID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetID"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(targetID, ARPawn_eventOnTargetLost_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ARToolKit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
			MetaData->SetValue(NewProp_targetName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AARPawn_SetTracking()
	{
		struct ARPawn_eventSetTracking_Parms
		{
			bool on;
		};
		UObject* Outer=Z_Construct_UClass_AARPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetTracking"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(ARPawn_eventSetTracking_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(on, ARPawn_eventSetTracking_Parms, bool);
			UProperty* NewProp_on = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("on"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(on, ARPawn_eventSetTracking_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(on, ARPawn_eventSetTracking_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ARToolKit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AARPawn_NoRegister()
	{
		return AARPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_AARPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage__Script_AR();
			OuterClass = AARPawn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AARPawn_getCameraTexture());
				OuterClass->LinkChild(Z_Construct_UFunction_AARPawn_OnTargetFound());
				OuterClass->LinkChild(Z_Construct_UFunction_AARPawn_OnTargetLost());
				OuterClass->LinkChild(Z_Construct_UFunction_AARPawn_SetTracking());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowTracking, AARPawn, bool);
				UProperty* NewProp_bAllowTracking = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowTracking"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowTracking, AARPawn), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bAllowTracking, AARPawn), sizeof(bool), true);
				UProperty* NewProp_cameraSelection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("cameraSelection"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(cameraSelection, AARPawn), 0x0010000000000001, Z_Construct_UEnum_AR_ECameraSelection());
				UProperty* NewProp_cameraHelper = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("cameraHelper"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(cameraHelper, AARPawn), 0x00100000000b0009, Z_Construct_UClass_USceneComponent_NoRegister());
				UProperty* NewProp_targetHelper = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("targetHelper"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(targetHelper, AARPawn), 0x00100000000b0009, Z_Construct_UClass_USceneComponent_NoRegister());
				UProperty* NewProp_plane = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("plane"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(plane, AARPawn), 0x00100000000b0009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_camera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("camera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(camera, AARPawn), 0x00100000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_pivot = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("pivot"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(pivot, AARPawn), 0x00100000000b0009, Z_Construct_UClass_USceneComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AARPawn_getCameraTexture(), "getCameraTexture"); // 1246957294
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AARPawn_OnTargetFound(), "OnTargetFound"); // 2271421374
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AARPawn_OnTargetLost(), "OnTargetLost"); // 840614752
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AARPawn_SetTracking(), "SetTracking"); // 1071696184
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ARPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
				MetaData->SetValue(NewProp_bAllowTracking, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_bAllowTracking, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
				MetaData->SetValue(NewProp_bAllowTracking, TEXT("ToolTip"), TEXT("by default is true, so you start your pawn instance tracking"));
				MetaData->SetValue(NewProp_cameraSelection, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_cameraSelection, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
				MetaData->SetValue(NewProp_cameraSelection, TEXT("ToolTip"), TEXT("DEFAULT in mobile mean the back camera, in desktop is the first, and in desktop works as ++ index if you need another webcam"));
				MetaData->SetValue(NewProp_cameraHelper, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_cameraHelper, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_cameraHelper, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
				MetaData->SetValue(NewProp_targetHelper, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_targetHelper, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_targetHelper, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
				MetaData->SetValue(NewProp_plane, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_plane, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_plane, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
				MetaData->SetValue(NewProp_camera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_camera, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_camera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_camera, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
				MetaData->SetValue(NewProp_pivot, TEXT("Category"), TEXT("ARToolKit"));
				MetaData->SetValue(NewProp_pivot, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_pivot, TEXT("ModuleRelativePath"), TEXT("Public/ARPawn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AARPawn(Z_Construct_UClass_AARPawn, &AARPawn::StaticClass, TEXT("AARPawn"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AARPawn);
	UPackage* Z_Construct_UPackage__Script_AR()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/AR")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xD7327C39;
			Guid.B = 0x1DEFC737;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
